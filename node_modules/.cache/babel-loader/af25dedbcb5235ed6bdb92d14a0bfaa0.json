{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/projetos-pessoais/trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { getEmail } from '../actions/index';\nimport img from '../imgs/money3d.jpeg';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailInput: '',\n      password: ''\n    };\n    this.HandleEmail = this.HandleEmail.bind(this);\n    this.HandlePass = this.HandlePass.bind(this);\n    this.HandleValidate = this.HandleValidate.bind(this);\n    this.EmailIsValide = this.EmailIsValid.bind(this);\n  }\n\n  HandleEmail(event) {\n    this.setState({\n      emailInput: event.target.value // salvo o valor do que foi digitado no estado desse componente para depois passar para o estado global do redux\n\n    });\n  }\n\n  HandlePass(event) {\n    this.setState({\n      password: event.target.value // salvo a senha também para poder usar na validação do desable\n\n    });\n  }\n\n  EmailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  } // validação do email tirado desse site https://ui.dev/validate-email-address-javascript/\n\n\n  HandleValidate() {\n    const {\n      emailInput,\n      password\n    } = this.state;\n    const number = 6;\n    const validate = this.EmailIsValid(emailInput);\n\n    if (password.length >= number && validate === true) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    const {\n      emailInput\n    } = this.state;\n    const {\n      firstDispatchGetEmail,\n      history: {\n        push\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"login-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Cool Wallet\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"email\",\n      \"data-testid\": \"email-input\",\n      onChange: event => this.HandleEmail(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"senha\",\n      \"data-testid\": \"password-input\",\n      onChange: event => this.HandlePass(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: this.HandleValidate(),\n      onClick: () => {\n        firstDispatchGetEmail(emailInput);\n        push('/carteira'); // uso essa função que está dentro do history para assim não precisar usar o Link do router e o botão ficar realmente desabilitado, fiz isso com ajuda do intrutor Gabriel\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Entrar\"))), /*#__PURE__*/React.createElement(\"img\", {\n      src: img,\n      alt: \"img\",\n      className: \"login-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  firstDispatchGetEmail: email => dispatch(getEmail(email))\n});\n\nLogin.propTypes = {\n  firstDispatchGetEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/projetos-pessoais/trybewallet/src/pages/Login.js"],"names":["React","PropTypes","connect","getEmail","img","Login","Component","constructor","props","state","emailInput","password","HandleEmail","bind","HandlePass","HandleValidate","EmailIsValide","EmailIsValid","event","setState","target","value","email","test","number","validate","length","render","firstDispatchGetEmail","history","push","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getEmail } from '../actions/index';\nimport img from '../imgs/money3d.jpeg'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailInput: '',\n      password: '',\n    };\n    this.HandleEmail = this.HandleEmail.bind(this);\n    this.HandlePass = this.HandlePass.bind(this);\n    this.HandleValidate = this.HandleValidate.bind(this);\n    this.EmailIsValide = this.EmailIsValid.bind(this);\n  }\n\n  HandleEmail(event) {\n    this.setState({\n      emailInput: event.target.value, // salvo o valor do que foi digitado no estado desse componente para depois passar para o estado global do redux\n    });\n  }\n\n  HandlePass(event) {\n    this.setState({\n      password: event.target.value, // salvo a senha também para poder usar na validação do desable\n    });\n  }\n\n  EmailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n  // validação do email tirado desse site https://ui.dev/validate-email-address-javascript/\n\n  HandleValidate() {\n    const { emailInput, password } = this.state;\n    const number = 6;\n    const validate = this.EmailIsValid(emailInput);\n    if (password.length >= number && validate === true) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { emailInput } = this.state;\n    const { firstDispatchGetEmail, history: { push } } = this.props;\n\n    return (\n      <section className=\"login-section\">\n        <div className=\"login-form\">\n          <h2>Cool Wallet</h2>\n          <form>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              data-testid=\"email-input\"\n              onChange={ (event) => this.HandleEmail(event) }\n            />\n            <input\n              type=\"password\"\n              placeholder=\"senha\"\n              data-testid=\"password-input\"\n              onChange={ (event) => this.HandlePass(event) }\n            />\n            <button\n              type=\"button\"\n              disabled={ this.HandleValidate() }\n              onClick={ () => {\n                firstDispatchGetEmail(emailInput);\n                push('/carteira');\n                // uso essa função que está dentro do history para assim não precisar usar o Link do router e o botão ficar realmente desabilitado, fiz isso com ajuda do intrutor Gabriel\n              } }\n            >\n              Entrar\n              {/* <Link to=\"/carteira\">Entrar</Link> */}\n            </button>\n          </form>\n        </div>\n        <img src={img} alt=\"img\" className=\"login-img\"/>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  firstDispatchGetEmail: (email) => dispatch(getEmail(email)),\n});\n\nLogin.propTypes = {\n  firstDispatchGetEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}