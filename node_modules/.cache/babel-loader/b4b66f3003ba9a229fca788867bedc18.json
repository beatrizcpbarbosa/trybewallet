{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isLoading: false,\n  error: null,\n  id: -1,\n  exchangeRates: {},\n  totalValue: 0\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'LOADING_REQUEST':\n      return { ...state,\n        isLoading: true\n      };\n\n    case 'SUCCESS_REQUEST':\n      return { ...state,\n        currencies: action.data\n      };\n\n    case 'GET_EXPENSES':\n      return { ...state,\n        expenses: [...state.expenses, action.expenses],\n        // adiciono o objeto q estava antes e o atualizado\n        id: action.expenses.id // pego esse valor do id que está dentro do objeto expenses\n\n      };\n\n    case 'GET_EXCHANGE_RATES':\n      return { ...state,\n        exchangeRates: action.data\n      };\n\n    case 'GET_TOTAL_VALUE':\n      return { ...state,\n        totalValue: action.value\n      };\n\n    case 'DELETE':\n      return { ...state,\n        expenses: state.expenses.filter(item => item.id !== action.id) // filtro todas as expenses que tem um id diferente do id da expense que enviei na action\n\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default walletReducer;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/projetos-pessoais/trybewallet/src/reducers/wallet.js"],"names":["INITIAL_STATE","currencies","expenses","isLoading","error","id","exchangeRates","totalValue","walletReducer","state","action","type","data","value","filter","item"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,SAAS,EAAE,KAHS;AAIpBC,EAAAA,KAAK,EAAE,IAJa;AAKpBC,EAAAA,EAAE,EAAE,CAAC,CALe;AAMpBC,EAAAA,aAAa,EAAE,EANK;AAOpBC,EAAAA,UAAU,EAAE;AAPQ,CAAtB;;AAUA,SAASC,aAAT,CAAuBC,KAAK,GAAGT,aAA/B,EAA8CU,MAA9C,EAAsD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,iBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELN,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELR,QAAAA,UAAU,EAAES,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBQ,MAAM,CAACR,QAA3B,CAFL;AAE2C;AAChDG,QAAAA,EAAE,EAAEK,MAAM,CAACR,QAAP,CAAgBG,EAHf,CAGmB;;AAHnB,OAAP;;AAKF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELH,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAFjB,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACG;AAFd,OAAP;;AAIF,SAAK,QAAL;AACE,aAAQ,EACN,GAAGJ,KADG;AAENP,QAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeY,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYK,MAAM,CAACL,EAAnD,CAFJ,CAGN;;AAHM,OAAR;;AAKF;AACE,aAAOI,KAAP;AAlCF;AAoCD;;AAED,eAAeD,aAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isLoading: false,\n  error: null,\n  id: -1,\n  exchangeRates: {},\n  totalValue: 0,\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'LOADING_REQUEST':\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case 'SUCCESS_REQUEST':\n    return {\n      ...state,\n      currencies: action.data,\n    };\n  case 'GET_EXPENSES':\n    return {\n      ...state,\n      expenses: [...state.expenses, action.expenses], // adiciono o objeto q estava antes e o atualizado\n      id: action.expenses.id, // pego esse valor do id que está dentro do objeto expenses\n    };\n  case 'GET_EXCHANGE_RATES':\n    return {\n      ...state,\n      exchangeRates: action.data,\n    };\n  case 'GET_TOTAL_VALUE':\n    return {\n      ...state,\n      totalValue: action.value,\n    };\n  case 'DELETE':\n    return ({\n      ...state,\n      expenses: state.expenses.filter((item) => item.id !== action.id),\n      // filtro todas as expenses que tem um id diferente do id da expense que enviei na action\n    });\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}