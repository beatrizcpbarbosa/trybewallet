{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/projetos-pessoais/trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ThunkAPI } from '../actions/wallet';\nimport Header from '../components/Header';\nimport Form from '../components/Form';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const {\n      ThunkAPIDispatch\n    } = this.props;\n    ThunkAPIDispatch(); // chamo/executo a função thunk, e é aqui que começa de fato chamada da api\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  ThunkAPIDispatch: () => dispatch(ThunkAPI())\n}); // uso o mapDispatchToProps pois estou usando uma action para passar uma inforção para o reducer e estado global,\n// nesse caso a action é uma função e a informação é a chamada dessa função que ira encadear com a chamada da api e o dispatch de outra actions\n// como a atction que guarda a informação da api dentro do estado global em wallet.currencies\n\n\nWallet.propTypes = {\n  ThunkAPIDispatch: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/projetos-pessoais/trybewallet/src/pages/Wallet.js"],"names":["React","PropTypes","connect","ThunkAPI","Header","Form","Table","Wallet","Component","componentDidMount","ThunkAPIDispatch","props","render","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKC,KAAlC;AACAD,IAAAA,gBAAgB,GAFE,CAGlB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAfkC;;AAkBrC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCJ,EAAAA,gBAAgB,EAAE,MAAMI,QAAQ,CAACX,QAAQ,EAAT;AADQ,CAAf,CAA3B,C,CAGA;AACA;AACA;;;AAEAI,MAAM,CAACQ,SAAP,GAAmB;AACjBL,EAAAA,gBAAgB,EAAET,SAAS,CAACe,IAAV,CAAeC;AADhB,CAAnB;AAIA,eAAef,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCN,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { ThunkAPI } from '../actions/wallet';\n\nimport Header from '../components/Header';\nimport Form from '../components/Form';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { ThunkAPIDispatch } = this.props;\n    ThunkAPIDispatch();\n    // chamo/executo a função thunk, e é aqui que começa de fato chamada da api\n  }\n\n  render() {\n    return (\n      <section>\n        <Header />\n        <Form />\n        <Table />\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  ThunkAPIDispatch: () => dispatch(ThunkAPI()),\n});\n// uso o mapDispatchToProps pois estou usando uma action para passar uma inforção para o reducer e estado global,\n// nesse caso a action é uma função e a informação é a chamada dessa função que ira encadear com a chamada da api e o dispatch de outra actions\n// como a atction que guarda a informação da api dentro do estado global em wallet.currencies\n\nWallet.propTypes = {\n  ThunkAPIDispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}